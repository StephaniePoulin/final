{"version":3,"sources":["assets/js/canvas.js"],"names":["window","onload","followMouse","polygonData","lastMousePos","Point","innerWidth","innerHeight","canvas","document","getElementById","ctx","getContext","oscillate","querySelector","fillPolygons","oscillationRange","oscillationFrequency","drawNonPoly","compmode","followMouseCheckbox","checkUrlParams","x","y","Polygon","fill","points","tick","step","parseFloat","value","body","onmousemove","e","pageX","pageY","handleResize","width","height","onresize","polygons","querySelectorAll","i","length","polygon","getAttribute","trim","remove","push","source","createImageOfNonPolygonalShapes","timestamp","clearRect","globalCompositeOperation","drawShape","checked","drawImage","requestAnimationFrame","split","strokeStyle","fillStyle","beginPath","point","Math","sin","moveTo","lineTo","closePath","stroke","Image","DOMURL","URL","webkitURL","data","outerHTML","svgData","XMLSerializer","serializeToString","blob","Blob","type","domURL","self","url","createObjectURL","addEventListener","revokeObjectURL","src","elements","element","key","$_GET","param","vars","location","href","replace","m","undefined"],"mappings":"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","file":"canvas.01f6231d.js","sourceRoot":"..","sourcesContent":["window.onload = function() {\n\n    var followMouse = false, // whether or not to \"follow the mouse\"\n        polygonData = [], // array to hold data objects, one for each point\n        lastMousePos = Point(window.innerWidth * .5, window.innerHeight * .5), // where the mouse was last, assume the mouse starts at the center\n\n        canvas = document.getElementById(\"canvas\"), // our <canvas> tag in the index.html DOM\n        ctx = canvas.getContext(\"2d\"),\n        // query the DOM once for these elements by using pointer variables\n        oscillate = document.querySelector('input[name=\"oscillate\"]'),\n        fillPolygons = document.querySelector('input[name=\"fill_polygons\"]'),\n        oscillationRange = document.querySelector('input[name=\"osc_range\"]'),\n        oscillationFrequency = document.querySelector('input[name=\"osc_freq\"]'),\n        drawNonPoly = document.querySelector('input[name=\"draw_non_poly\"]'),\n        compmode = document.getElementById('compmode'),\n        followMouseCheckbox = document.querySelector('input[name=\"follow_mouse\"]');\n\n\n    checkUrlParams();\n\n    function Point(x, y) { // used to store coordinates\n        return {\n            x:x,\n            y:y\n        }\n    }\n\n    function Polygon(fill,points,tick) { // data object for polygons\n        tick = typeof tick !== 'undefined' ?  tick : 0; // a number incremented each step. the Math.sin() of this value will be used to create our oscillation effect https://codepen.io/jpdevries/pen/BjLOeY\n        return {\n            points:points,\n            fill:fill,\n            tick:tick,\n            step:function() { // each step increment the tick by the current frequency\n                this.tick += parseFloat(oscillationFrequency.value);\n            }\n        }\n    }\n\n    document.body.onmousemove = function(e) { // whenever the mouse is moved\n        lastMousePos = Point(e.pageX, e.pageY); // store the current mouse position\n    };\n\n    function handleResize() {\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n    }\n\n    window.onresize = function() {\n        handleResize(); // keep the canvas full screen\n    };\n\n    handleResize();\n\n    (function(){ // for each <polygon> in the source SVG extract points, fill and then remove\n        var polygons = document.querySelectorAll('#wolf polygon');\n\n        for(var i = 0; i < polygons.length; i++) {\n            var polygon = polygons[i],\n                points = polygon.getAttribute('points').trim(),\n                fill = polygon.getAttribute('fill');\n\n            polygon.remove(); // remove the shape from the SVG\n\n            polygonData.push(Polygon(fill,points)); // create a Polygon and store it. We'll loop through all these to draw them on each step()\n        }\n    })();\n\n    var source = createImageOfNonPolygonalShapes(); // create an image of the remaining non-polygonal shapes\n\n    function step(timestamp) { // for each step through the animation\n        ctx.clearRect(0, 0, canvas.width, canvas.height); // clear the canvas\n        ctx.globalCompositeOperation = compmode.value; // update the \"blend mode\"\n\n        for(var i = 0; i < polygonData.length; i++) { // for each polygon\n            var polygon = polygonData[i];\n\n            drawShape(ctx,polygon); // draw the shape onto the <canvas>\n\n            polygon.step();\n        }\n\n        if(drawNonPoly.checked) ctx.drawImage(source, (window.innerWidth / 2 )- (522/2), (window.innerHeight / 2 )- (620/2)); // draw non-polygonal shapes and center them on <canvas>\n\n        window.requestAnimationFrame(step); // keep the animation running\n    }\n\n    window.requestAnimationFrame(step); // start the animation\n\n    function drawShape(ctx,polygon) { // draw the polygon data to a <canvas> context\n        var points = polygon.points.split(' '),\n            strokeStyle = polygon.fill,\n            fillStyle = polygon.fill;\n\n        if(followMouseCheckbox.checked) { // \"follow the mouse\" if we should\n            points[0] = (lastMousePos.x) + ',' + (lastMousePos.y);\n        }\n\n        ctx.strokeStyle = strokeStyle;\n        ctx.fillStyle = fillStyle;\n\n        ctx.beginPath();\n\n        for(var i = 0; i < points.length; i++) { // for each point in the polygon\n            var point = points[i],\n                x = parseFloat(point.split(',')[0]),\n                y = parseFloat(point.split(',')[1]);\n\n            if(oscillate.checked) { // apply oscillation effect using a sin wave\n                if(i == 1) {\n                    x += Math.sin(polygon.tick) * oscillationRange.value; // second point in polygon moves horizontally\n                } else if(i == 2) {\n                    y += Math.sin(polygon.tick) * oscillationRange.value; // third point in polygol moves vertically\n                }\n            }\n\n            if(i !== 0 || !followMouseCheckbox.checked) { // adjust coordinates for stage size\n                x += (window.innerWidth - 522) / 2;\n                y += (window.innerHeight - 620) / 2;\n            }\n\n            if(i<1) {\n                ctx.moveTo(x,y); // move to the position of the first point\n            } else {\n                ctx.lineTo(x,y); // draw lines to the rest\n            }\n        }\n\n        ctx.closePath(); // close the path and set the fill style\n\n        if(fillPolygons.checked) ctx.fill(); // fill the path or\n        else ctx.stroke(); // stroke the path\n    }\n\n    function createImageOfNonPolygonalShapes() { // takes the remaining <svg> data from our #wolf element and prepare it for being drawn to the canvas\n        var source = new Image();\n        var DOMURL = window.URL || window.webkitURL || window;\n\n        var data = document.querySelector(\"#wolf\").outerHTML;\n\n        var svgData = new XMLSerializer().serializeToString(document.querySelector(\"#wolf\"));\n        var blob = new Blob([svgData], { type: \"image/svg+xml;charset=utf-8\" });\n\n        var domURL = self.URL || self.webkitURL || self;\n        var url = domURL.createObjectURL(blob);\n\n        source.width = '522';\n        source.height = '620';\n\n        source.addEventListener('load', function () {\n            ctx.drawImage(source, (window.innerWidth / 2 )- (522/2), (window.innerHeight / 2 )- (620/2));\n            domURL.revokeObjectURL(url);\n        });\n\n        source.src = url;\n\n        return source;\n    }\n\n    function checkUrlParams() {\n        var elements = document.querySelectorAll('[data-url-param]');\n        for(var i = 0; i < elements.length; i++) {\n            var element = elements[i];\n            var key = element.getAttribute('data-url-param');\n            if($_GET(key) !== null) {\n                if(element.type == \"checkbox\") {\n                    element.checked = ($_GET(key) == \"1\") ? true : false;\n                } else {\n                    element.value = $_GET(key);\n                }\n            }\n        }\n    }\n}\n\nfunction $_GET(param) { // http://www.creativejuiz.fr/blog/en/javascript-en/read-url-get-parameters-with-javascript\n    var vars = {};\n    window.location.href.replace(\n        /[?&]+([^=&]+)=?([^&]*)?/gi, // regexp\n        function( m, key, value ) { // callback\n            vars[key] = value !== undefined ? value : '';\n        }\n    );\n\n    if ( param ) {\n        return vars[param] ? vars[param] : null;\n    }\n    return vars;\n}"]}